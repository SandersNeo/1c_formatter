// Репозиторий проекта: 
// https://github.com/vladimir-kharin/1c_formatter
// 
// Харин Владимир (С) 2025. https://vharin.ru
// Telegram - https://t.me/vladimir_kharin

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ПараметрыКоманды") Тогда
		АдресДереваСтруктурыМодулей = Параметры.ПараметрыКоманды.АдресДереваСтруктурыМодулей;
	        дз = ПолучитьИзВременногоХранилища(АдресДереваСтруктурыМодулей);
		Если Параметры.ПараметрыКоманды.Идентификатор = "ДокументированиеВыбранногоМетодаСНастройкой" Тогда
	            дз.Колонки.Добавить("НомерСтрокиВМетодыКДокументированию");
			
	            ВыбраннаяСтрока = Обработки.ОМ_ОформляторМодулей.НайтиВыбраннуюСтроку(дз);
			
	            МассивМетодов = Новый Массив;
			Если ВыбраннаяСтрока.ТипЭлемента = "Процедура" ИЛИ ВыбраннаяСтрока.ТипЭлемента = "Функция" Тогда
				МассивМетодов.Добавить(ВыбраннаяСтрока);
			ИначеЕсли ВыбраннаяСтрока.ТипЭлемента = "Область" ИЛИ ВыбраннаяСтрока.ТипЭлемента = "Модуль" Тогда
				МассивМетодов = Обработки.ОМ_ОформляторМодулей.НайтиПодчиненныеСтроки(ВыбраннаяСтрока, "Процедура,Функция");
			КонецЕсли;
			
			СтрМодуль = Обработки.ОМ_ОформляторМодулей.НайтиСтрокуМодуля(ВыбраннаяСтрока);
			ТекстМодуля = Обработки.ОМ_Компонент_ГенерацияТекстовМодулей.ТекстМодуля(СтрМодуль);
			
			ОдинМетод = (МассивМетодов.Количество() = 1);
			
			НомерСтроки = 1;
			Для каждого СтрМетод Из МассивМетодов Цикл
				МетодКДокументированию = МетодыКДокументированию.Добавить();
				ЗаполнитьЗначенияСвойств(МетодКДокументированию, СтрМетод.Содержимое, "Имя,ЭтоФункция,Комментарий,КомментарийВозвращаемоеЗначение");
				МетодКДокументированию.ТекстМетода = Обработки.ОМ_Компонент_ГенерацияТекстовМодулей.ГенерироватьТекстМетода(СтрМетод, Истина, Ложь);
				МетодКДокументированию.ПараметрыМетода.Загрузить(СтрМетод.Содержимое.Параметры);
				МетодКДокументированию.Пометка = ОдинМетод ИЛИ СтрМетод.Содержимое.Экспортная;
				МетодКДокументированию.НомерКартинки = ?(МетодКДокументированию.ЭтоФункция, 1, 0);
				
	                СтрМетод.НомерСтрокиВМетодыКДокументированию = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
	
	            ПоместитьВоВременноеХранилище(дз, АдресДереваСтруктурыМодулей);
			
			// Устанавливаем текущую страницу в зависимости от количества методов
			Элементы.СтраницыОдинНесколько.ТекущаяСтраница = ?(ОдинМетод,
				Элементы.СтраницаОдинМетод,
				Элементы.СтраницаНесколькоМетодов);
		КонецЕсли;
			
		Анализировать = "ТолькоМетод";
	Иначе
		ВызватьИсключение "В форму должен быть передан параметр ПараметрыКоманды.АдресДереваСтруктурыМодулей";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.МетодыКДокументированию.ТекущаяСтрока = МетодыКДокументированию[0].ПолучитьИдентификатор();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМетодыКДокументированию

&НаКлиенте
Процедура МетодыКДокументированиюПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.МетодыКДокументированию.ТекущиеДанные;
	Элементы.МетодыКДокументированиюКомментарийВозвращаемоеЗначение.Видимость = 
		ТекДанные <> Неопределено И ТекДанные.ЭтоФункция;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ГенерироватьОписание(Команда)
	Для каждого МетодКДокументированию Из МетодыКДокументированию Цикл
		Если НЕ МетодКДокументированию.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КлючAPI) Тогда
			Если Анализировать = "ТолькоМетод" Тогда
				СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоТексту(
					МетодКДокументированию.ТекстМетода, КлючAPI, БазовыйАдрес, Модель, ДопИнфоКонтекст);
			ИначеЕсли Анализировать = "ВесьМодуль" Тогда
				СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоМодулю(
					МетодКДокументированию.Имя, ТекстМодуля, КлючAPI, БазовыйАдрес, Модель, ДопИнфоКонтекст);
			КонецЕсли;
		Иначе
			Если Анализировать = "ТолькоМетод" Тогда
				СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоТекстуСервисомПоУмолчанию(
					МетодКДокументированию.ТекстМетода, ДопИнфоКонтекст);
			ИначеЕсли Анализировать = "ВесьМодуль" Тогда
				СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоМодулюСервисомПоУмолчанию(
					МетодКДокументированию.Имя, ТекстМодуля, ДопИнфоКонтекст);
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьОписаниеМетодаИзСтруктуры(МетодКДокументированию, СтруктураОписания);
		
		Если МетодыКДокументированию.Количество() > 1 Тогда
			МетодКДокументированию.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПринятьИЗакрыть(Команда)
	ПринятьИЗакрытьНаСервере();
	Закрыть(Новый Структура("АдресДереваСтруктурыМодулей", АдресДереваСтруктурыМодулей));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	Для каждого МетодКДокументированию Из МетодыКДокументированию Цикл
		МетодКДокументированию.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для каждого МетодКДокументированию Из МетодыКДокументированию Цикл
		МетодКДокументированию.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьОписаниеМетодаИзСтруктуры(МетодКДокументированию, СтруктураОписания)
	Попытка
		МетодКДокументированию.Комментарий = СтруктураОписания.description;
		Если МетодКДокументированию.ЭтоФункция Тогда
			МетодКДокументированию.КомментарийВозвращаемоеЗначение = СтруктураОписания.return_descr;
		КонецЕсли;
		
		ОМ_ДокументированиеМетодовКлиентСервер.ЗаполнитьТаблицуПараметровМетода(МетодКДокументированию.ПараметрыМетода, СтруктураОписания.parameters);
	Исключение
		ВызватьИсключение "Неправильный формат ответа от модели, не удалось найти поле. " + ОписаниеОшибки();
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПринятьИЗакрытьНаСервере()
	дз = ПолучитьИзВременногоХранилища(АдресДереваСтруктурыМодулей);
	
	Для Индекс = 0 По МетодыКДокументированию.Количество() - 1 Цикл
		МетодКДокументированию = МетодыКДокументированию[Индекс];
		
		// Находим строку метода в дереве по номеру строки
		СтрокиМетода = дз.Строки.НайтиСтроки(Новый Структура("НомерСтрокиВМетодыКДокументированию", Индекс + 1), Истина);
		Если СтрокиМетода.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаМетода = СтрокиМетода[0];
		
		// Обновляем параметры метода в дереве
		СтрокаМетода.Содержимое.Комментарий = МетодКДокументированию.Комментарий;
		СтрокаМетода.Содержимое.КомментарийВозвращаемоеЗначение = МетодКДокументированию.КомментарийВозвращаемоеЗначение;
		
		// Обновляем параметры метода
		СтрокаМетода.Содержимое.Параметры.Очистить();
		Для каждого СтрокаПараметра Из МетодКДокументированию.ПараметрыМетода Цикл
			НоваяСтрока = СтрокаМетода.Содержимое.Параметры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПараметра);
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(дз, АдресДереваСтруктурыМодулей);
КонецПроцедуры

#КонецОбласти

