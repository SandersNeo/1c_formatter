#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет команды действий в коллекцию команд, включая команду для документирования методов с настройкой.
// 
// Параметры:
//  КомандыДействий - Коллекция - Коллекция команд, в которую добавляются новые команды действий
Процедура ДобавитьКомандыДействий(КомандыДействий) Экспорт

	НоваяСтрока = КомандыДействий.Добавить();
	НоваяСтрока.Представление = "Документирование методов (с настройкой)...";
	НоваяСтрока.Идентификатор = "ДокументированиеВыбранногоМетодаСНастройкой";
	НоваяСтрока.ОбластьДействия = "Процедура,Функция,Модуль,Область";
	НоваяСтрока.Порядок = 201;
	НоваяСтрока.СпособЗапускаДействия = "ОткрытиеФормы";
	
	// НоваяСтрока = КомандыДействий.Добавить();
	// НоваяСтрока.Представление = "Документирование";
	// НоваяСтрока.Идентификатор = "ДокументированиеВыбранногоМетода";
	// НоваяСтрока.ОбластьДействия = "Процедура,Функция";
	// НоваяСтрока.Порядок = 200;
	// НоваяСтрока.СпособЗапускаДействия = "ВызовМетодаМодуляМенеджера";

КонецПроцедуры

// Выполняет действие на основании идентификатора команды
// 
// Параметры:
//  ИдКоманды        - Строка    - Идентификатор команды действия
//  ПараметрыКоманды - Структура - Параметры команды с деревом структуры модуля
Процедура ВыполнитьДействие(ИдКоманды, ПараметрыКоманды) Экспорт

	Если ИдКоманды = "ДокументированиеПрограммногоИнтерфейса" Тогда
		ДеревоСтруктурыМодулей = ПараметрыКоманды.ДеревоСтруктурыМодулей;
	
		// Найдем область ПрограммныйИнтерфейс
		ОбластьПрограммныйИнтерфейс = Обработки.ОМ_ОформляторМодулей.НайтиОбластьПоИмени(ДеревоСтруктурыМодулей, "ПрограммныйИнтерфейс");
		Если ОбластьПрограммныйИнтерфейс = Неопределено Тогда
			ОбластьПрограммныйИнтерфейс = Обработки.ОМ_ОформляторМодулей.НайтиОбластьПоИмени(ДеревоСтруктурыМодулей, "Public");
			Если ОбластьПрограммныйИнтерфейс = Неопределено Тогда
				Возврат ;
			КонецЕсли;
		КонецЕсли;
	
		// Находим все методы в этой области
		Методы = Обработки.ОМ_ОформляторМодулей.НайтиПодчиненныеСтроки(ОбластьПрограммныйИнтерфейс, "Процедура,Функция");
	
		Если Методы.Количество() = 0 Тогда
			Возврат ;
		КонецЕсли;
	
		КлючAPI = Неопределено;
		ПараметрыКоманды.Вставить("КлючAPI", КлючAPI);
	
		БазовыйАдрес = Неопределено;
		ПараметрыКоманды.Вставить("БазовыйАдрес", БазовыйАдрес);
	
		Модель = Неопределено;
		ПараметрыКоманды.Вставить("Модель", Модель);
	
		СпособДокументирования = Неопределено;
		ПараметрыКоманды.Вставить("СпособДокументирования", СпособДокументирования);
	
		ДокументироватьПовторно = Ложь;
		ПараметрыКоманды.Вставить("ДокументироватьПовторно", ДокументироватьПовторно);
	
		// Формируем текст всего модуля для документирования по модулю
		Если СпособДокументирования = "ВесьМодуль" Тогда
			СтрМодуль = Обработки.ОМ_ОформляторМодулей.НайтиСтрокуМодуля(ОбластьПрограммныйИнтерфейс);
			ТекстМодуля = Обработки.ОМ_Компонент_ГенерацияТекстовМодулей.ТекстМодуля(СтрМодуль);
		КонецЕсли;
	
		// Документируем каждый метод
		Для Каждого МетодСтрока Из Методы Цикл
			Если Не ДокументироватьПовторно
				И ЗначениеЗаполнено(МетодСтрока.Содержимое.Комментарий)
			Тогда
				Продолжить;
			КонецЕсли;
	
			// Получаем текст метода
			Если СпособДокументирования = "ВесьМодуль" Тогда
				ИмяМетода = МетодСтрока.Содержимое.Имя;
			Иначе
				ТекстМетода = Обработки.ОМ_Компонент_ГенерацияТекстовМодулей.ГенерироватьТекстМетода(МетодСтрока, Истина, Ложь);
			КонецЕсли;
	
			Попытка
				// Документируем метод с помощью сервиса по умолчанию
				Если ЗначениеЗаполнено(КлючAPI) Тогда
					Если СпособДокументирования = "ВесьМодуль" Тогда
						СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоМодулю(
							ИмяМетода, ТекстМодуля, КлючAPI, БазовыйАдрес, Модель);
					Иначе
						СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоТексту(
							ТекстМетода, КлючAPI, БазовыйАдрес, Модель);
					КонецЕсли;
				Иначе
					Если СпособДокументирования = "ВесьМодуль" Тогда
						СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоМодулюСервисомПоУмолчанию(
							ИмяМетода, ТекстМодуля);
					Иначе
						СтруктураОписания = ОМ_ДокументированиеМетодовКлиентСервер.ДокументироватьМетодПоТекстуСервисомПоУмолчанию(ТекстМетода);
					КонецЕсли;
				КонецЕсли;
	
				// Обновляем документацию метода
				МетодСтрока.Содержимое.Комментарий = СтруктураОписания.description;
	
				// Только для функций обновляем комментарий возвращаемого значения
				Если МетодСтрока.Содержимое.ЭтоФункция Тогда
					МетодСтрока.Содержимое.КомментарийВозвращаемоеЗначение = СтруктураОписания.return_descr;
				КонецЕсли;
	
				// Заполняем описания параметров
				ОМ_ДокументированиеМетодовКлиентСервер.ЗаполнитьТаблицуПараметровМетода(
					МетодСтрока.Содержимое.Параметры, СтруктураОписания.parameters);
			Исключение
				// Выводим сообщение об ошибке документирования метода
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ТекстСообщения = СтрШаблон("Не удалось документировать метод ""%1"": %2", 
					МетодСтрока.Содержимое.Имя, ИнформацияОбОшибке.Описание);
	
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли

