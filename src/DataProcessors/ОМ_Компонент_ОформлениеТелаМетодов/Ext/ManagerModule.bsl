#Область ПрограммныйИнтерфейс

Процедура ДобавитьКомандыДействий(КомандыДействий) Экспорт
	НоваяСтрока = КомандыДействий.Добавить();
	НоваяСтрока.Представление = "Оформление тела методов (с настройкой)...";
	НоваяСтрока.Идентификатор = "ОформлениеМетодаСНастройкой";
	НоваяСтрока.ОбластьДействия = "Процедура,Функция,Модуль,Область";
	НоваяСтрока.Порядок = 203;
	НоваяСтрока.СпособЗапускаДействия = "ОткрытиеФормы";

	НоваяСтрока = КомандыДействий.Добавить();
	НоваяСтрока.Представление = "Форматирование тела методов";
	НоваяСтрока.Идентификатор = "ФорматированиеКода";
	НоваяСтрока.Порядок = 104;
	НоваяСтрока.СпособЗапускаДействия = "ВызовМетодаМодуляМенеджера";
	
	НоваяСтрока = КомандыДействий.Добавить();
	НоваяСтрока.Представление = "Форматирование тела методов";
	НоваяСтрока.Идентификатор = "ФорматированиеКодаВыбранногоОбъекта";
	НоваяСтрока.ОбластьДействия = "Процедура,Функция,Модуль,Область,Код";
	НоваяСтрока.Порядок = 104;
	НоваяСтрока.СпособЗапускаДействия = "ВызовМетодаМодуляМенеджера";
КонецПроцедуры

// Выполняет действие по идентификатору команды, модифицируя дерево структуры модулей.
// 
// Параметры:
//  ИдКоманды        - Строка - Идентификатор выполняемой команды
//  ПараметрыКоманды - Объект - Объект, содержащий параметры команды
Процедура ВыполнитьДействие(ИдКоманды, ПараметрыКоманды) Экспорт
	МассивЭлементов = Новый Массив;
	
	Если ИдКоманды = "ФорматированиеКода" Тогда
		МассивЭлементов = Обработки.ОМ_ОформляторМодулей.НайтиПодчиненныеСтроки(ПараметрыКоманды.ДеревоСтруктурыМодулей, "Процедура,Функция,Код");
	ИначеЕсли ИдКоманды = "ФорматированиеКодаВыбранногоОбъекта" Тогда
		ВыбраннаяСтрока = Обработки.ОМ_ОформляторМодулей.НайтиВыбраннуюСтроку(ПараметрыКоманды.ДеревоСтруктурыМодулей);
		
		Если ВыбраннаяСтрока.ТипЭлемента = "Процедура" 
			ИЛИ ВыбраннаяСтрока.ТипЭлемента = "Функция" 
			ИЛИ ВыбраннаяСтрока.ТипЭлемента = "Код" 
		Тогда
			МассивЭлементов.Добавить(ВыбраннаяСтрока);
		ИначеЕсли ВыбраннаяСтрока.ТипЭлемента = "Область" ИЛИ ВыбраннаяСтрока.ТипЭлемента = "Модуль" Тогда
			МассивЭлементов = Обработки.ОМ_ОформляторМодулей.НайтиПодчиненныеСтроки(ВыбраннаяСтрока, "Процедура,Функция,Код");
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(МассивЭлементов) Тогда
		ФорматироватьКодВЭлементахДереваСтруктурыМодулей(МассивЭлементов);
	КонецЕсли;
КонецПроцедуры

// Возвращает дерево структуры модулей с оформленным кодом
// 
// Параметры:
//  ДеревоСтруктуры - Дерево - Исходное дерево структуры модулей
// 
// Возвращаемое значение:
//  Дерево - Дерево структуры модулей со стандартными областями
Процедура ФорматироватьКодВЭлементахДереваСтруктурыМодулей(МассивЭлементов) Экспорт
	Для каждого ЭлементДереваСтруктуры Из МассивЭлементов Цикл
		СтрМодуль = Обработки.ОМ_ОформляторМодулей.НайтиСтрокуМодуля(ЭлементДереваСтруктуры);
		АнглСинтаксис = (СтрМодуль.Содержимое.Синтаксис = "Английский");

		ЭлементДереваСтруктуры.Содержимое.Тело = Оформить(ЭлементДереваСтруктуры.Содержимое.Тело, АнглСинтаксис);
	КонецЦикла;
КонецПроцедуры

Функция Оформить(Текст, _АнглСинтаксис = Ложь) Экспорт
	Компонент_ОформлениеТелаМетодов = ОбработкаОформлениеТелаМетодов();
	Возврат Компонент_ОформлениеТелаМетодов.Оформить(Текст, _АнглСинтаксис);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработкаОформлениеТелаМетодов()
	Возврат Обработки.ОМ_Компонент_ОформлениеТелаМетодов.Создать();
КонецФункции

#КонецОбласти
